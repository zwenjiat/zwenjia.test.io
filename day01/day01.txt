版本控制管理工具
    集中式
        CVS SVN
    分布式
        git 
        git是为了管理linux内核代码而诞生的

命令行 *shell命令*
    1.pwd，cd, ls
    pwd:print working directory 显示当前工作目录/路径
    cd: change directory  改变工作路径
        cd  目标文件夹/目录
        cd .. 回到上一级
        cd ./a  进入到当前文件夹下的a文件夹中
        cd ../a  进入到上一级文件夹下的a文件夹中
        ==绝对路径==
        cd d/app 进入都d盘下的app文件夹中
        cd ~ 进入到当前登录用户的主目录
    ls:list
        ls 显示当前文件夹中的所有非隐藏文件和目录
        linux 下隐藏文件或目录的方式:以.开头的文件或目录为隐藏
        ls -a 显示所有，包括隐藏
        ls -lt 以列表形式展示详细信息，并按照时间顺序排序(升序)
        ls 路径 现实指定目录中的内容
    2.新建文件夹
    mkdir (make directory)
    mkdir 目录路径
    mkdir -p 目录路径 如果父级目录不存在，先创建父级目录  
    mkdir a b 同tou事创建多的目录

    3.创建文件
    touch
    touch 1.txt  创建1.txt文件
    如果touch的文件名已经存在,不会覆盖原来的文件，而是修改原来文件的最后访问时间
    touch还可以修改目录的最后访问时间
    touch 目录名

    4.echo
     将数据写入到指定文件，如果文件不存在，创建
     echo 数据 > 文件名(覆盖模式)
     echo 数据 >> 文件名(追加模式)

    5. vi
      vi 文件名 
      使用命令后，命令行会进入文本编辑界面
      此界面分为三种模式
        命令模式:
             vi命令使用后进入的模式。可以输入a/i/o进入输入模式，也可以输入:进入底行模式
        输入模式：
             此模式下可以向文件中输入数据，输入完成后按esc退出输入模式，进入命令模式
         底行模式：
            :wq 保存并退出
            :q  不保存，直接退出
            :w  保存但不退出
            :q! 不保存但强制退出

    6.cat
        catch 获取某个文件的内容
        cat 文件名
    
    7.删除文件夹
        rmdir (remove directory)
        rmdir 目录名 删除目录(永久删除)只能删除空目录，如果目录中有其他内容，则删除失败
    
    8.删除文件
        rm
        rm 文件名 (永久删除)
        如果要删除非空目录
        rm -rf 目录名
        rm -rf / 删除根目录

git命令
    注：所有的git命令都是以git开头的
    1.配置用户信息
        git config --global user.name "用户名"
        git config --global user.email "邮箱"
    2.初始化本地仓库
    git init
    进入到目标文件夹中使用命令git init 初始化成功后，目标文件夹中会自动生成一个隐藏的.git文件夹，同时，git bash命令行中
    路径后面会多一个(master)

    .git文件夹就是本地仓库的版本库
    3.查看本地仓库的状态
    git statusget
    三大区域
        工作区：仓库所在文件夹，保存文件的地方
        暂存区：版本库中暂存
        分支所在区：HEAD指向的分支
    四种状态：
        modified:文件有修改，但是寒没有暂存
        untracked:新建的文件，还没有被git管理控制住 
        staged:文件被暂存，还没有提交
        unmodified:文件被提交

    4.提交
      提交分两个步骤
        1)从工作区提交到暂存区
            git add 文件名
        2) 从暂停区提交到master分支
        git commit -m "提交的信息"


*git只关注文件忽略空文件夹*
*git check-out - 文件名   {撤销工作区中的修改即一夜回到解放前}*


